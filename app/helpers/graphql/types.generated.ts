export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** An ISO 8601-encoded date */
  Date: { input: string; output: string; }
  /** An ISO 8601-encoded datetime */
  DateTime: { input: string; output: string; }
};

export type Image = Node & {
  __typename?: 'Image';
  /** ID of the object. */
  id: Scalars['ID']['output'];
  signedId: Scalars['String']['output'];
  url: Scalars['String']['output'];
};


export type ImageUrlArgs = {
  size?: InputMaybe<ImageSize>;
};

export type ImageInput = {
  signedId: Scalars['String']['input'];
};

export enum ImageSize {
  Lg = 'LG',
  Md = 'MD',
  Sm = 'SM'
}

export type InputFieldError = {
  __typename?: 'InputFieldError';
  field: Scalars['String']['output'];
  message: Scalars['String']['output'];
};

export type Mutation = {
  __typename?: 'Mutation';
  requestUserEmailVerification: RequestUserEmailVerificationPayload;
  requestUserPasswordReset: RequestUserPasswordResetPayload;
  testMutation: TestMutationPayload;
  updateUserEmail: UpdateUserEmailPayload;
  updateUserProfile: UpdateUserProfilePayload;
};


export type MutationRequestUserEmailVerificationArgs = {
  input: RequestUserEmailVerificationInput;
};


export type MutationRequestUserPasswordResetArgs = {
  input: RequestUserPasswordResetInput;
};


export type MutationTestMutationArgs = {
  input: TestMutationInput;
};


export type MutationUpdateUserEmailArgs = {
  input: UpdateUserEmailInput;
};


export type MutationUpdateUserProfileArgs = {
  input: UpdateUserProfileInput;
};

/** An object with an ID. */
export type Node = {
  /** ID of the object. */
  id: Scalars['ID']['output'];
};

export type Query = {
  __typename?: 'Query';
  activityStatus?: Maybe<Scalars['String']['output']>;
  announcement?: Maybe<Scalars['String']['output']>;
  bootedAt: Scalars['DateTime']['output'];
  contactEmail: Scalars['String']['output'];
  imageBySignedId?: Maybe<Image>;
  passwordStrength: Scalars['Float']['output'];
  testEcho: Scalars['String']['output'];
  user?: Maybe<User>;
  viewer?: Maybe<User>;
};


export type QueryImageBySignedIdArgs = {
  signedId: Scalars['String']['input'];
};


export type QueryPasswordStrengthArgs = {
  password: Scalars['String']['input'];
};


export type QueryTestEchoArgs = {
  text?: InputMaybe<Scalars['String']['input']>;
};


export type QueryUserArgs = {
  id: Scalars['ID']['input'];
};

/** Autogenerated input type of RequestUserEmailVerification */
export type RequestUserEmailVerificationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  email: Scalars['String']['input'];
};

/** Autogenerated return type of RequestUserEmailVerification. */
export type RequestUserEmailVerificationPayload = {
  __typename?: 'RequestUserEmailVerificationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of RequestUserPasswordReset */
export type RequestUserPasswordResetInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  email: Scalars['String']['input'];
};

/** Autogenerated return type of RequestUserPasswordReset. */
export type RequestUserPasswordResetPayload = {
  __typename?: 'RequestUserPasswordResetPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

export type Subscription = {
  __typename?: 'Subscription';
  activityStatus?: Maybe<Scalars['String']['output']>;
  testSubscription: Scalars['Int']['output'];
};

export type TestModel = {
  __typename?: 'TestModel';
  birthday?: Maybe<Scalars['Date']['output']>;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

/** Autogenerated input type of TestMutation */
export type TestMutationInput = {
  birthday?: InputMaybe<Scalars['Date']['input']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
};

/** Autogenerated return type of TestMutation. */
export type TestMutationPayload = {
  __typename?: 'TestMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors?: Maybe<Array<InputFieldError>>;
  model?: Maybe<TestModel>;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of UpdateUserEmail */
export type UpdateUserEmailInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  currentPassword: Scalars['String']['input'];
  email: Scalars['String']['input'];
};

/** Autogenerated return type of UpdateUserEmail. */
export type UpdateUserEmailPayload = {
  __typename?: 'UpdateUserEmailPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors?: Maybe<Array<InputFieldError>>;
  success: Scalars['Boolean']['output'];
  user?: Maybe<User>;
};

/** Autogenerated input type of UpdateUserProfile */
export type UpdateUserProfileInput = {
  avatar?: InputMaybe<ImageInput>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
};

/** Autogenerated return type of UpdateUserProfile. */
export type UpdateUserProfilePayload = {
  __typename?: 'UpdateUserProfilePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors?: Maybe<Array<InputFieldError>>;
  success: Scalars['Boolean']['output'];
  user?: Maybe<User>;
};

export type User = Node & {
  __typename?: 'User';
  avatar?: Maybe<Image>;
  email: Scalars['String']['output'];
  /** ID of the object. */
  id: Scalars['ID']['output'];
  isOwner: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  unverifiedEmail?: Maybe<Scalars['String']['output']>;
};
